!pip install pandas numpy matplotlib seaborn scikit-learn

# Step 1: Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# Step 2: Load the credit card fraud dataset
# Ensure the file path to the dataset is correct when running in your environment
df = pd.read_csv('credit_card.csv')

# Step 3: Initial data exploration

# Check the first few rows of the dataset
print(df.head())

# Check for missing values
missing_values = df.isnull().sum()
print(f"Missing values:\n{missing_values}")

# Basic statistics of the dataset
print(df.describe())

# View the data
df

# Step 4: Data cleaning
# Since there are no missing values in the dataset, we don't need to handle any nulls
# If there were missing values, you could handle them as follows:
# df = df.fillna(df.mean()) or df.dropna()

# Check for duplicates
df.duplicated().sum()

# Drop duplicates
df.drop_duplicates()

# Step 5: Feature scaling
# Extracting the feature columns and the target variable (Class)
X = df.drop('Class', axis=1)
y = df['Class']

# Standardize the features (mean=0, variance=1) using StandardScaler
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 6: Feature Engineering - PCA (Principal Component Analysis)
# Reducing the number of features using PCA to explain variance in a reduced number of components
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Visualize the first two principal components
plt.figure(figsize=(10, 6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, cmap='coolwarm', alpha=0.5)
plt.title('PCA of Credit Card Fraud Dataset')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.colorbar(label='Class')
plt.show()

# Step 7: Save the processed dataset
# Create a DataFrame with scaled features and reattach the target column
df_cleaned = pd.DataFrame(X_scaled, columns=df.columns[:-1])
df_cleaned['Class'] = y.values
df_cleaned.to_csv('cleaned_credit_card.csv', index=False)

# Step 8: Summary of Dataset (For Slide 13)
# Total number of transactions
total_transactions = df.shape[0]

print(f"Total Transactions: {total_transactions}")

# Final message
print("Data cleaning, transformation, and feature engineering completed